<?phpclass UserSession {	 /** user login id*/    var $login_id;	/** user login name*/    var $login_name;    /** user privilege */    var $privilege;    /** Session ID */    var $sid;    /** Role*/    var $role;    /** Used to check the validity of the transition page */    var $uniqid;        static $instance = NULL;    function __construct() {        		$this->init();        $this->sid = session_id();         /*		$this->login_id  = $_SESSION['login_id'];      		$this->login_name  = $_SESSION['login_name'];       		$this->privilege = $_SESSION['privilege'];		$this->role = $_SESSION['role'];		if (isset($_SESSION['uniq_id'])) {			$this->uniqid    = $_SESSION['uniq_id'];		}          */    }		function setUserSession($login_id,$login_name,$role,$privilege) {        $this->set('login_id', $login_id);        $this->set('login_name', $login_name);        $this->set('role', $role);        $this->set('privilege', $privilege);          $this->set('uniqid', $this->getUniqId());    }	    static function getInstance() {		 if (!isset(self::$instance)){			$className = __CLASS__;	        self::$instance = new $className;	    }	    return self::$instance;	}		public function init(){		@session_start();	}	public function set($key,$value){		$_SESSION[$key]=$value;	}	public  function  get($key)	{		if (isset($_SESSION[$key]))			return $_SESSION[$key];	}      function GetSID() {        return $this->sid;    }    function getUniqId() {        // If the unique ID is not set .        if( empty($_SESSION['uniqid']) ) {            $this->setUniqId();        }        return $this->get('uniqid');    } 	function setUniqId() {        // To give a random string so that it is not predictable.        $this->set('uniqid',uniqid());    }	function EndSession() {        // "PHPSESSID" default        $sname = session_name();        // Unset all of the session variables.        $_SESSION = array(); 		// To disconnect the session, also delete the session cookie.        // Note: This will destroy the session, as well as session information.        if (isset($_COOKIE[$sname])) {            setcookie($sname, '', time()-42000, '/');        }        // Finally, destroy the session        session_destroy();        }    function isLogged() {       if (isset($_SESSION['login_id']))            return true;        return false;    }    function logout() {        unset($_SESSION['login_id']);        unset($_SESSION['login_name']);        unset($_SESSION['role']);        unset($_SESSION['privilege']);        unset($_SESSION['uniqid']);        unset($_SESSION['menu']);    }}?>